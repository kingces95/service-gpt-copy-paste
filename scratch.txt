{ name: 'Concept', base: 'PartialClass' }
{ name: 'PartialClass' }
{
  name: 'MyExtensionClass',
  base: 'PartialClass',
  members: {
    instance: {
      methods: {
        myExtensionMethod: { type: 'method', host: 'MyExtensionClass' }
      }
    }
  }
}
{
  name: 'MyPartialClass',
  base: 'PartialClass',
  members: {
    instance: {
      methods: {
        myPartialMethod: { type: 'method', host: 'MyPartialClass' },
        myExtensionMethod: { type: 'method', host: 'MyExtensionClass' }
      }
    }
  }
}
{
  name: 'MyConcept',
  base: 'Concept',
  members: {
    instance: {
      methods: {
        myConceptMethod: { type: 'method', host: 'MyConcept' },
        myLeftConceptMethod: { type: 'method', host: 'MyLeftConcept' },
        myBaseConceptMethod: { type: 'method', host: 'MyBaseConcept' },
        myRightConceptMethod: { type: 'method', host: 'MyRightConcept' }
      }
    }
  }
}
{ name: 'Function', base: 'Object' }
{
  name: 'MyBase',
  base: 'Object',
  members: {
    static: {
      methods: { myStaticBaseMethod: { type: 'method', host: 'MyBase' } }
    },
    instance: {
      methods: {
        myBaseMethod: { type: 'method', host: 'MyBase' },
        myConceptMethod: { type: 'method', host: 'MyBase', isAbstract: true },
        myLeftConceptMethod: { type: 'method', host: 'MyBase', isAbstract: true },
        myBaseConceptMethod: { type: 'method', host: 'MyBase', isAbstract: true },
        myRightConceptMethod: { type: 'method', host: 'MyBase', isAbstract: true },
        myAbstractMethod: { type: 'method', host: 'MyBase', isAbstract: true }
      }
    }
  }
}
{
  name: 'MyClass',
  base: 'MyBase',
  members: {
    static: {
      methods: {
        myStaticMethod: { type: 'method', host: 'MyClass' },
        myStaticBaseMethod: { type: 'method', host: 'MyBase' }
      },
      accessors: {
        myStaticAccessor: {
          type: 'accessor',
          host: 'MyClass',
          hasGetter: true,
          hasSetter: true
        }
      }
    },
    instance: {
      methods: {
        myMethod: { type: 'method', host: 'MyClass' },
        myAbstractMethod: { type: 'method', host: 'MyClass', rootHost: 'MyBase' },
        myConceptMethod: { type: 'method', host: 'MyClass', rootHost: 'MyBase' },
        myPartialMethod: { type: 'method', host: 'MyClass' },
        myExtensionMethod: { type: 'method', host: 'MyClass' },
        myBaseMethod: { type: 'method', host: 'MyBase' },
        myLeftConceptMethod: { type: 'method', host: 'MyBase', isAbstract: true },
        myBaseConceptMethod: { type: 'method', host: 'MyBase', isAbstract: true },
        myRightConceptMethod: { type: 'method', host: 'MyBase', isAbstract: true },
        [Symbol(my-symbol)]: { type: 'method', host: 'MyClass' }
      },
      accessors: {
        myAccessor: {
          type: 'accessor',
          host: 'MyClass',
          hasGetter: true,
          hasSetter: true
        }
      }
    }
  }
}
{ name: 'Object' }
