#!/usr/bin/env node
import { CliYargsLoader } from '@kingjs/cli-yargs'
import { CliCommand } from '@kingjs/cli-command'

export const Clippy = CliCommand.extend({
  name: 'Clippy',
  description: 'My funky cli',
  commands: {
    main: 'clippy',
    poll: 'clippy/poll',
    dispatch: 'clippy/dispatch',
    
    http: '@kingjs/cli-http',
    orb: '@kingjs/cli-orb',
    shell: '@kingjs/cli-eval',
    spy: '@kingjs/cli-spy',
    name: '@kingjs/cli-node-name',
    err: '@kingjs/cli-simulator',
  },
  groups: [
    ['Polling', '@kingjs/cli-rx-poller'],
    ['Pulse', '@kingjs/cli-pulse, CliPulse'],
    ['I/O',
      '@kingjs/cli-std-stream, CliStdStream',
      '@kingjs/cli-reader, CliParser',],
    ['Global', '@kingjs/cli-command'],
  ]
})

let argv = undefined
// argv = 'poll'.split(' ')
// argv = 'orb --stdin ./polling.txt'.split(' ')
// argv = 'spy poll -- --get-yargs-completions'.split(' ')
// argv = 'eval ps dir'.split(' ')
// argv = 'http get'.split(' ')
// argv = 'eval bash node.exe src/clippy/clippy poll'.split(' ')
argv = 'main'.split(' ')
// argv = 'shell bash echo hello world'.split(' ')

// alias cli='node.exe src/clippy/clippy $@'
if (process.argv.length > 2) argv = undefined

CliYargsLoader.execute(Clippy, argv)
