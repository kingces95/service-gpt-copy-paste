#!/usr/bin/env node
import { Clippy } from './index.js'
import { CliRuntime } from '@kingjs/cli-runtime'
import { CliYargsCommand } from '@kingjs/cli-yargs'

let argv = undefined
// argv = 'spy info -h'.split(' ')
// argv = 'spy info'.split(' ')
// argv = 'poll'.split(' ')
// argv = 'orb --stdin ./polling.txt'.split(' ')
// argv = 'spy poll -- --get-yargs-completions'.split(' ')
// argv = 'http get https://jsonplaceholder.typicode.com/todos/1'.split(' ')
// argv = 'spy info http get'.split(' ')
// argv = 'http get -h'.split(' ')

// allow spaceless short options; e.g. '-k2' => '-k 2'
// TODO: allow combining short predicatates; e.g. '-abc' => '-a -b -c'
// TODO: will require reflection to get all short options
argv = process.argv.slice(2).flatMap(arg =>
  arg.match(/^-[a-zA-Z]\S+/) ? [arg.slice(0, 2), arg.slice(2)] : [arg]
)

CliRuntime.activate(Clippy)
  .then(async runtime => runtime.info.toPojo()
    .then(async pojo => {
      const cliYargs = CliYargsCommand.fromInfoPojo(pojo)
      const yargs = await cliYargs.yargs(argv)
      const args = await yargs.parse()
      await runtime.execute(args._, args)
    })
  )
